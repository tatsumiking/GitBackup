void esf1fontFontNameSet(LPSTR pFont);
int esf1fontDataLoad(UINT sjis);
int esf1fontGaijiDataLoad(UINT sjis);
int esf1fontUserDataSave(UINT sjis);
int esf1fontUserDataExist(UINT sjis);
int esf1fontUserDataDelete(UINT sjis);
int esf1fontUserDataLoad(int ku, int ten);
int esf1fontEsysDataLoad(int ku, int ten);
int esf1fontUserFontWriteOpen();
int esf1fontUserFontOpen();
int esf1fontEsysFontOpen();
void esf1fontFontClose();
int esf1fontUserFontNullSet();
void esf1fontIdxSeekPointGet(int ku, int ten, long *seekp);
void esf1fontDataLenSeekPointGet(e1idxtype f1idx, int *dlen, long *dseekp);
void esf1fontDataLenSeekPointSet(e1idxtype *f1idx, int dlen, long dseekp);
void esf1fontTateGakiTrns(UINT sjis);
void esf1fontSetDataLen(int pp);
void esf1fontAtrDXYGet(BYTE fBuf[], int pp, int *atr, DBL *x, DBL *y);
void esf1fontAtrDXYSet(BYTE fBuf[], int pp, int atr, DBL x, DBL y);
int esf1fontEorChk(BYTE fBuf[], int pp);
void esf1fontEorOn(BYTE fBuf[], int pp);
int esf1fontRejionChk(BYTE fBuf[], int pp);
void esf1fontRejionOff(BYTE fBuf[], int pp);
void esf1fontRejionOn(BYTE fBuf[], int pp);

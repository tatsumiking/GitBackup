/************************************************************
 *    ＩｍａｇｅＫｉｔ４       Ver. 1.20                    *
 *                                                          *
 *           for C, C++                                     *
 *                                                          *
 *          <IMAGEKIT.H>                  (株)ニュートン    *
 *                                                          *
 *   下記のＤＬＬ関数を利用するときは                       *
 *   本ファイルをインクルードして下さい．                   *
 ************************************************************/
#ifndef IMAGEKIT_INCLUDE
#define IMAGEKIT_INCLUDE

#ifdef __WIN32__
	#ifndef _WIN32
		#define _WIN32
	#endif
#endif

#ifdef _WIN32
	#define IMAGEKIT_API	APIENTRY
	#define FAR_PASCAL		APIENTRY
#else
	#define IMAGEKIT_API	CALLBACK _export
	#define FAR_PASCAL		FAR PASCAL
#endif

/**********************************************************************
 * コマンド一覧                                                       *
 **********************************************************************
 * ImgKitBit24To8() : 減色処理                                        *
 *                                                                    *
 *   引  数：HANDLE Handle  - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR  Title   - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR  Message - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *   戻り値：HANDLE         - 新しいﾒﾓﾘﾊﾝﾄﾞﾙ                          *
 *                                                                    *
 *   24ﾋﾞｯﾄﾋﾟｸｾﾙｲﾒｰｼﾞ(ﾌﾙｶﾗｰ)を8ﾋﾞｯﾄﾋﾟｸｾﾙｲﾒｰｼﾞ(256色)に減色            *
 *                                                                    *
 *   対応するイメージ                                                 *
 *       ２４ビットピクセル（フルカラー）                             *
 **********************************************************************
 * ImgKitBit8To4() : 減色処理                                         *
 *                                                                    *
 *   引  数：HANDLE Handle  - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR  Title   - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR  Message - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *   戻り値：HANDLE         - 新しいﾒﾓﾘﾊﾝﾄﾞﾙ                          *
 *                                                                    *
 *   誤差拡散法によるディザで処理                                     *
 *   8ﾋﾞｯﾄﾋﾟｸｾﾙｲﾒｰｼﾞ(256色)を4ﾋﾞｯﾄﾋﾟｸｾﾙｲﾒｰｼﾞ(16色)に減色              *
 *                                                                    *
 *   対応するイメージ                                                 *
 *       ８ビットピクセル（２５６色）                                 *
 **********************************************************************
 * ImgKitBmpFileSave() : ファイル保存                                 *
 *                                                                    *
 *   引  数：LPSTR FileName - 保存ﾌｧｲﾙ名                              *
 *           HANDLE Handle  - 保存するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *           BOOL Comp      - 圧縮ﾌﾗｸﾞ(0:なし  1:有り)                *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 *                                                                    *
 *   対応するイメージ（圧縮ありの時）                                 *
 *       ４ビットピクセル（  １６色）                                 *
 *       ８ビットピクセル（２５６色）                                 *
 **********************************************************************
 * ImgKitBright() : 輝度調整（各RGBの値を変更する）                   *
 *                                                                    *
 *   引  数：HANDLE Handle  - 保存するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR  Title   - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR  Message - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *           DOUBLE Bright  - 係数                                    *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 *                                                                    *
 *       y = x + (SQRT(x) - x) * Bright                               *
 *           x:元のピクセル値                                         *
 *           y:新しいピクセル値                                       *
 *                                                                    *
 *         x = 0.5 (255*0.5=127)の時                                  *
 *           Bright =  1の時：y = 0.7 (255*0.7=178)                   *
 *           Bright =  0の時：y = 0.5 (255*0.5=127)                   *
 *           Bright = -1の時：y = 0.3 (255*0.3=76)                    *
 **********************************************************************
 * ImgKitColor24And8() : ２つのイメージの合成                         *
 *                                                                    *
 *   引  数：HANDLE Handle24 - 合成されるｲﾒｰｼﾞのﾊﾝﾄﾞﾙ(24ﾋﾞｯﾄﾋﾟｸｾﾙ)    *
 *           HANDLE Handle8  - 合成するｲﾒｰｼﾞのﾊﾝﾄﾞﾙ(8ﾋﾞｯﾄﾋﾟｸｾﾙｸﾞﾚｰ)   *
 *           LPSTR  Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ             *
 *           LPSTR  Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ           *
 *   戻り値：HANDLE          - 新しいﾒﾓﾘﾊﾝﾄﾞﾙ                         *
 *                                                                    *
 *   正常終了後は Handle24 と Handle8 を破棄                          *
 *                                                                    *
 *     ----------        ----------                                   *
 *     |  ----  |        |        |      ----                         *
 *     |  |  |  |   ←   |        |  ＋  |  |                         *
 *     |  ----  |        |        |      ----                         *
 *     ----------        ----------                                   *
 *    新しいﾒﾓﾘﾊﾝﾄﾞﾙ      Handle24     Handle8                        *
 *                                                                    *
 *     24ﾋﾞｯﾄﾋﾟｸｾﾙ       24ﾋﾞｯﾄﾋﾟｸｾﾙ   8ﾋﾞｯﾄﾋﾟｸｾﾙ                     *
 *     ｲﾒｰｼﾞ             ｲﾒｰｼﾞ         ｲﾒｰｼﾞ                          *
 *                                                                    *
 *   対応するイメージ                                                 *
 *         ８ビットピクセル（２５６色,２５６階調グレースケール）      *
 *       ２４ビットピクセル（フルカラー）                             *
 **********************************************************************
 * ImgKitColorReverse() : 色の反転                                    *
 *                                                                    *
 *   引  数：HANDLE Handle  - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 **********************************************************************
 * ImgKitConvertColor() : イメージの色数を変更                        *
 *                                                                    *
 *   引  数：HANDLE Handle    - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ           *
 *           int    Pixeltype - 変換後のﾋﾞｯﾄｶﾗｰ(1, 4, 8, 24)          *
 *           BOOL   FixedPale - TRUE :固定パレットを使用              *
 *                              FALSE:最適固定パレットを使用          *
 *                                 (Pixeltype=1の時固定パレットを使用)*
 *           BOOL   Dither    - TRUE -誤差拡散法によるディザの使用    *
 *                              FALSE-ディザなし                      *
 *           LPSTR  Title     - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ            *
 *           LPSTR  Message   - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ          *
 *   戻り値：BOOL      成功   - 0以外(TRUE)                           *
 *                     失敗   - 0    (FALSE)                          *
 **********************************************************************
 * ImgKitCopy() : イメージデータのコピー                              *
 *                                                                    *
 *   引  数：HANDLE Handle  - コピー元の処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ   *
 *           LPSTR Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *   戻り値：HANDLE         - コピー先の新しいﾒﾓﾘﾊﾝﾄﾞﾙ                *
 **********************************************************************
 * ImgKitCut() : イメージの切り取り処理                               *
 *                                                                    *
 *   引  数：HANDLE Handle  - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 *                                                                    *
 *                                                                    *
 *   操作方法                                                         *
 *     （１）マウスで４点をクリックする                               *
 *     （２）'取り消し' - 最後にクリックした点をキャンセル            *
 *     （３）'中止し'   - ４点の指定処理をキャンセル                  *
 *     （４）'実行'     - 切り取り処理の実行                          *
 *                                                                    *
 *     実寸表示 - 実際のサイズで表示                                  *
 *                （表示されない部分はスクロールバーを操作して）      *
 *                （表示する                                  ）      *
 *     全体表示 - ウインドウのサイズに合わせて全体のイメージを        *
 *                表示                                                *
 *                                                                    *
 *                                                                    *
 *   指定した矩形領域のイメージを切り取る．この時領域が台形の様に     *
 *   長方形でないときは、アフィン変換を施して矩形領域を取得する．     *
 *                                                                    *
 *               _____ (3)       変換後のイメージのサイズは           *
 *      (2) /----     |          左図の様な形の指定の時４点(1)(2)     *
 *        /            |         (3)(4)の中に収まる矩形となる．       *
 *      /               |                                             *
 * (1)-------------------  (4)                                        *
 **********************************************************************
 * ImgKitDisplay() : イメージの表示処理                               *
 *                                                                    *
 *   引  数：HWND   hWnd    - 表示するｳｲﾝﾄﾞｳのﾊﾝﾄﾞﾙ                   *
 *           HANDLE Handle  - ｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ                     *
 *           BOOL   Stretch - 表示方法                                *
 *                            TRUE :ウインドウのサイズにビットマップを*
 *                                  ストレッチする                    *
 *                            FALSE:通常の状態で表示                  *
 *                            但しウインドウのサイズよりビットマップ  *
 *                            が大きい時は縮小して表示                *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 **********************************************************************
 * ImgKitDisplayXY() : イメージの表示処理                             *
 *                                                                    *
 *   引  数：HWND   hWnd    - 表示するｳｲﾝﾄﾞｳのﾊﾝﾄﾞﾙ                   *
 *           HANDLE Handle  - ｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ                     *
 *           int    Xstart  - 表示開始位置(ﾋﾟｸｾﾙ単位)                 *
 *           int    Ystart  -       〃                                *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 **********************************************************************
 * ImgKitDisplayHdc() : イメージの表示処理                            *
 *                                                                    *
 *   引  数：HDC    hDC     - 表示するｳｲﾝﾄﾞｳのﾃﾞﾊﾞｲｽｺﾝﾃｷｽﾄ            *
 *           HANDLE Handle  - ｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ                     *
 *           int    Width   - 表示するｳｲﾝﾄﾞｳの幅(ﾋﾟｸｾﾙ単位)           *
 *           int    Height  - 表示するｳｲﾝﾄﾞｳの高さ(ﾋﾟｸｾﾙ単位)         *
 *           BOOL   Stretch - 表示方法                                *
 *                            TRUE :ウインドウのサイズにビットマップを*
 *                                  ストレッチする                    *
 *                            FALSE:通常の状態で表示                  *
 *                            但しウインドウのサイズよりビットマップ  *
 *                            が大きい時は縮小して表示                *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 **********************************************************************
 * ImgKitDisplayHdcXY() : イメージの表示処理                          *
 *                                                                    *
 *   引  数：HDC    hDC     - 表示するｳｲﾝﾄﾞｳのﾃﾞﾊﾞｲｽｺﾝﾃｷｽﾄ            *
 *           HANDLE Handle  - ｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ                     *
 *           int    Xstart  - 表示開始位置(ﾋﾟｸｾﾙ単位)                 *
 *           int    Ystart  -       〃                                *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 **********************************************************************
 * ImgKitDisplayRGB() : イメージの表示処理(ﾊﾞｯｸｶﾗｰの指定可能)         *
 *                                                                    *
 *   引  数：HWND   hWnd    - 表示するｳｲﾝﾄﾞｳのﾊﾝﾄﾞﾙ                   *
 *           HANDLE Handle  - ｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ                     *
 *           BOOL   Stretch - 表示方法                                *
 *                            TRUE :ウインドウのサイズにビットマップを*
 *                                  ストレッチする                    *
 *                            FALSE:通常の状態で表示                  *
 *                            但しウインドウのサイズよりビットマップ  *
 *                            が大きい時は縮小して表示                *
 *           int    Red     - バックの赤(0-255)                       *
 *           int    Green   - バックの緑(0-255)                       *
 *           int    Blue    - バックの青(0-255)                       *
 *           BOOL   Frame   - TRUE :イメージの縁に黒枠を描画          *
 *                            FALSE:イメージの縁に黒枠を描画なし      *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 **********************************************************************
 * ImgKitDisplayHdcRGB() : イメージの表示処理(ﾊﾞｯｸｶﾗｰの指定可能)      *
 *                                                                    *
 *   引  数：HDC    hDC     - 表示するｳｲﾝﾄﾞｳのﾃﾞﾊﾞｲｽｺﾝﾃｷｽﾄ            *
 *           HANDLE Handle  - ｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ                     *
 *           int    Width   - 表示するｳｲﾝﾄﾞｳの幅(ﾋﾟｸｾﾙ単位)           *
 *           int    Height  - 表示するｳｲﾝﾄﾞｳの高さ(ﾋﾟｸｾﾙ単位)         *
 *           BOOL   Stretch - 表示方法                                *
 *                            TRUE :ウインドウのサイズにビットマップを*
 *                                  ストレッチする                    *
 *                            FALSE:通常の状態で表示                  *
 *                            但しウインドウのサイズよりビットマップ  *
 *                            が大きい時は縮小して表示                *
 *           int    Red     - バックの赤(0-255)                       *
 *           int    Green   - バックの緑(0-255)                       *
 *           int    Blue    - バックの青(0-255)                       *
 *           BOOL   Frame   - TRUE :イメージの縁に黒枠を描画          *
 *                            FALSE:イメージの縁に黒枠を描画なし      *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 **********************************************************************
 * ImgKitEmboss() : エンボス（浮き彫り処理）                          *
 *                                                                    *
 *   引  数：HANDLE Handle  - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 *                                                                    *
 *   対応するイメージ                                                 *
 *       ８ビットピクセル（２５６階調グレースケール）                 *
 **********************************************************************
 * ImgKitFileLoad() : ファイルの呼び出し                              *
 *                                                                    *
 *   引  数：LPSTR FileName - 呼び出すﾌｧｲﾙ名                          *
 *           LPSTR Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *   戻り値：HANDLE         - ｲﾒｰｼﾞのﾒﾓﾘﾊﾝﾄﾞﾙ                         *
 *                                                                    *
 *  ファイル形式を判断してファイルをロードする                        *
 **********************************************************************
 * ImgKitFileType() : ファイルの情報の取得                            *
 *                                                                    *
 *   引  数：LPSTR       FileName - 呼び出すﾌｧｲﾙ名                    *
 *           LPFILE_INFO FileType - 取得する情報                      *
 *   戻り値：BOOL      成功  - 0以外(TRUE)                            *
 *                     失敗  - 0    (FALSE)                           *
 **********************************************************************
 * ImgKitFilter() : フィルタ処理                                      *
 *                                                                    *
 *   引  数：HANDLE Handle  - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR  Title   - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR  Message - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *           int    Proc    - 処理                                    *
 *                            0 : ﾛｰﾊﾟｽﾌｨﾙﾀ(水平と垂直方向の処理)     *
 *                                 (水平と垂直方向のぼかし処理)       *
 *                            1 : ﾛｰﾊﾟｽﾌｨﾙﾀ(水平方向の処理)           *
 *                                 (水平方向のぼかし処理)             *
 *                            2 : ﾛｰﾊﾟｽﾌｨﾙﾀ(垂直方向の処理)           *
 *                                 (垂直方向のぼかし処理)             *
 *                            3 : ﾛﾊﾞｰﾂﾌｨﾙﾀ                           *
 *                                 (エッヂ検出処理)                   *
 *                            4 : ﾗﾌﾟﾗｼｱﾝﾌｨﾙﾀ                         *
 *                                 (エッヂ検出処理)                   *
 *   戻り値：BOOL    成功 - 0以外(TRUE)                               *
 *                   失敗 - 0    (FALSE)                              *
 *                                                                    *
 *   対応するイメージ                                                 *
 *         ８ビットピクセル（２５６階調グレースケール）               *
 *       ２４ビットピクセル（フルカラー）                             *
 **********************************************************************
 * ImgKitGetFromClipBrd() : クリップボードからイメージを取り込む      *
 *                                                                    *
 *   引  数：HWND   hWnd    - ｳｲﾝﾄﾞｳﾊﾝﾄﾞﾙ                             *
 *   戻り値：HANDLE         - ｲﾒｰｼﾞのﾒﾓﾘﾊﾝﾄﾞﾙ                         *
 **********************************************************************
 * ImgKitGifFileLoad() : ＧＩＦ形式のファイルの呼び出し               *
 *                                                                    *
 *   引  数：LPSTR FileName - 呼び出すﾌｧｲﾙ名                          *
 *           LPSTR Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *           int   Page     - 呼び出すﾍﾟｰｼﾞ番号(0から始まる番号)      *
 *   戻り値：HANDLE         - ｲﾒｰｼﾞのﾒﾓﾘﾊﾝﾄﾞﾙ                         *
 *                                                                    *
 * ImgKitFileLoad()での読み込みでは複数のイメージがある時、           *
 * 最初のページ（０ページ）だけの読み込みを行う                       *
 **********************************************************************
 * ImgKitGifFileSave() : ＧＩＦ形式でファイル保存                     *
 *                                                                    *
 *   引  数：LPSTR  FileName - 保存ﾌｧｲﾙ名                             *
 *           HANDLE Handle   - 保存するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ            *
 *           LPSTR  Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ             *
 *           LPSTR  Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ           *
 *   戻り値：BOOL      成功  - 0以外(TRUE)                            *
 *                     失敗  - 0    (FALSE)                           *
 *                                                                    *
 *   対応するイメージ                                                 *
 *       １ビットピクセル（    ２色）                                 *
 *       ４ビットピクセル（  １６色）                                 *
 *       ８ビットピクセル（２５６色）                                 *
 **********************************************************************
 * ImgKitGifInterFileSave() : ＧＩＦ(ｲﾝﾀｰﾚｽ)形式でファイル保存        *
 *                                                                    *
 *   引  数：LPSTR  FileName - 保存ﾌｧｲﾙ名                             *
 *           HANDLE Handle   - 保存するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ            *
 *           LPSTR  Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ             *
 *           LPSTR  Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ           *
 *   戻り値：BOOL      成功  - 0以外(TRUE)                            *
 *                     失敗  - 0    (FALSE)                           *
 *                                                                    *
 *   対応するイメージ                                                 *
 *       １ビットピクセル（    ２色）                                 *
 *       ４ビットピクセル（  １６色）                                 *
 *       ８ビットピクセル（２５６色）                                 *
 **********************************************************************
 * ImgKitGifInterTrFileSave() : ＧＩＦ(透明ｲﾝﾀｰﾚｽ)形式でﾌｧｲﾙ          *
 *                                                                    *
 *   引  数：LPSTR  FileName - 保存ﾌｧｲﾙ名                             *
 *           HANDLE Handle   - 保存するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ            *
 *           WORD   Red      - 透明にする赤ﾊﾟﾚｯﾄ(0-255)               *
 *           WORD   Green    -           緑                           *
 *           WORD   Blue     -           青                           *
 *           LPSTR  Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ             *
 *           LPSTR  Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ           *
 *   戻り値：BOOL      成功  - 0以外(TRUE)                            *
 *                     失敗  - 0    (FALSE)                           *
 *                                                                    *
 *   対応するイメージ                                                 *
 *       １ビットピクセル（    ２色）                                 *
 *       ４ビットピクセル（  １６色）                                 *
 *       ８ビットピクセル（２５６色）                                 *
 **********************************************************************
 * ImgKitGifTrFileSave() : ＧＩＦ(透明)形式でﾌｧｲﾙ                     *
 *                                                                    *
 *   引  数：LPSTR  FileName - 保存ﾌｧｲﾙ名                             *
 *           HANDLE Handle   - 保存するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ            *
 *           WORD   Red      - 透明にする赤ﾊﾟﾚｯﾄ(0-255)               *
 *           WORD   Green    -           緑                           *
 *           WORD   Blue     -           青                           *
 *           LPSTR  Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ             *
 *           LPSTR  Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ           *
 *   戻り値：BOOL      成功  - 0以外(TRUE)                            *
 *                     失敗  - 0    (FALSE)                           *
 *                                                                    *
 *   対応するイメージ                                                 *
 *       １ビットピクセル（    ２色）                                 *
 *       ４ビットピクセル（  １６色）                                 *
 *       ８ビットピクセル（２５６色）                                 *
 **********************************************************************
 * ImgKitImageAdd() : ２つのイメージの合成                            *
 *                                                                    *
 *   引  数：HANDLE Handle1 - 合成されるｲﾒｰｼﾞのﾊﾝﾄﾞﾙ                  *
 *           HANDLE Handle2 - 合成するｲﾒｰｼﾞのﾊﾝﾄﾞﾙ                    *
 *           int    x       - Handle2をｾｯﾄするHandle1の横のﾋﾟｸｾﾙ値    *
 *           int    y       -                          縦             *
 *           int    Red     - 余白部分の赤(0-255)                     *
 *           int    Green   - 余白部分の緑(0-255)                     *
 *           int    Blue    - 余白部分の青(0-255)                     *
 *           LPSTR  Title   - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR  Message - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *   戻り値：HANDLE         - 新しいﾒﾓﾘﾊﾝﾄﾞﾙ(24ﾋﾞｯﾄﾋﾟｸｾﾙｲﾒｰｼﾞ)        *
 *                                                                    *
 *   正常終了後は Handle1 と Handle2 を破棄                           *
 *                                                                    *
 *     ----------        ----------                                   *
 *     |  ----  |        |        |      ----                         *
 *     |  |  |  |   ←   |        |  ＋  |  |                         *
 *     |  ----  |        |        |      ----                         *
 *     ----------        ----------                                   *
 *    新しいﾒﾓﾘﾊﾝﾄﾞﾙ      Handle1      Handle2                        *
 *     24ﾋﾞｯﾄﾋﾟｸｾﾙ                                                    *
 *     ｲﾒｰｼﾞ                                                          *
 **********************************************************************
 * ImgKitImageInfo() : 現在のイメージ情報の取得                       *
 *                                                                    *
 *   引  数：HANDLE Handle          - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ     *
 *           LPIMAGE_INFO ImageInfo - 取得する情報                    *
 *   戻り値：BOOL              成功 - 0以外(TRUE)                     *
 *                             失敗 - 0    (FALSE)                    *
 *                                                                    *
 *  LPIMAGE_INFO 構造体                                               *
 *                                                                    *
 *        Width     : 幅のピクセル数                                  *
 *        Height    : 縦のピクセル数                                  *
 *        Pixeltype : ピクセルタイプ                                  *
 *                       0 : ( 1ﾋﾞｯﾄ)-白黒２値                        *
 *                       1 : ( 4ﾋﾞｯﾄ)-１６色カラー                    *
 *                       2 : ( 4ﾋﾞｯﾄ)-１６階調グレー                  *
 *                       3 : ( 8ﾋﾞｯﾄ)-２５６色カラー                  *
 *                       4 : ( 8ﾋﾞｯﾄ)-２５６階調グレー                *
 *                       5 : (24ﾋﾞｯﾄ)-１６７０万色フルカラー          *
 *        WidthByte : 幅のバイト数                                    *
 *        ImageSize : イメージサイズ                                  *
 **********************************************************************
 * ImgKitImageSize() : イメージサイズの変更                           *
 *                                                                    *
 *   引  数：HANDLE Handle  - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR  Title   - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR  Message - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *           int    Width   - 新しい幅  (ﾋﾟｸｾﾙ)                       *
 *           int    Height  - 新しい高さ(ﾋﾟｸｾﾙ)                       *
 *   戻り値：HANDLE         - 新しいﾒﾓﾘﾊﾝﾄﾞﾙ                          *
 **********************************************************************
 * ImgKitJpegFileLoad() : ＪＰＥＧファイルの呼び出し                  *
 *                                                                    *
 *   引  数：LPSTR FileName - 呼び出すﾌｧｲﾙ名                          *
 *           LPSTR Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *           int   JpgCol   - ﾌｧｲﾙの読み込み色の指定                  *
 *                           (0:ﾌﾙｶﾗｰ  1:ｸﾞﾚｰｽｹｰﾙ)                    *
 *   戻り値：HANDLE         - ｲﾒｰｼﾞのﾒﾓﾘﾊﾝﾄﾞﾙ                         *
 *                                                                    *
 *   フルカラーイメージをグレースケールで読み込む時に使用             *
 *   イメージがグレースケールの時は勿論グレースケールで読む           *
 *   ImgKitFileLoad()でＪＰＥＧファイルを呼び出すとフルカラーは       *
 *   フルカラーで読込む                                               *
 **********************************************************************
 * ImgKitJpegFileSave() : ＪＰＥＧ形式でファイル保存                  *
 *                                                                    *
 *   引  数：LPSTR  FileName - 保存ﾌｧｲﾙ名                             *
 *           HANDLE Handle   - 保存するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ            *
 *           LPSTR  Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ             *
 *           LPSTR  Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ           *
 *           int    Quality  - JPEG圧縮品質係数(0〜100 推奨:50〜75)   *
 *           int    JpgCol   - 出力ﾌｧｲﾙ(0:ﾌﾙｶﾗｰ  1:ｸﾞﾚｰｽｹｰﾙ)          *
 *   戻り値：BOOL      成功  - 0以外(TRUE)                            *
 *                     失敗  - 0    (FALSE)                           *
 *                                                                    *
 *   対応するイメージ                                                 *
 *         ８ビットピクセル（２５６色階調グレー）                     *
 *       ２４ビットピクセル（フルカラー）                             *
 **********************************************************************
 * ImgKitMemFree() : イメージデータのメモリを解放                     *
 *                                                                    *
 *   引  数：HANDLE Handle  - ｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ                     *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 **********************************************************************
 * ImgKitMemSize() : イメージデータのメモリサイズを取得               *
 *                                                                    *
 *   引  数：HANDLE Handle   - ｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ                    *
 *   戻り値：DWORD           - ﾒﾓﾘｻｲｽﾞ                                *
 **********************************************************************
 * ImgKitMosaic() : モザイク処理                                      *
 *                                                                    *
 *   引  数：HANDLE Handle  - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR  Title   - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR  Message - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *           int    Rect    - ﾓｻﾞｲｸするﾋﾟｸｾﾙ数                        *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 **********************************************************************
 * ImgKitPrint() : 印刷処理                                           *
 *                                                                    *
 *   引  数：HWND   hWnd      - ｳｲﾝﾄﾞｳﾊﾝﾄﾞﾙ                           *
 *           HDC    hDC       - ﾌﾟﾘﾝﾀのﾃﾞﾊﾞｲｽｺﾝﾃｷｽﾄ                   *
 *           HANDLE Handle    - 印刷するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ           *
 *           LPRECT PrintRect - 印刷の範囲                            *
 *           BOOL   Frame     - 0以外-枠の印刷あり  0-枠の印刷なし    *
 *   戻り値：BOOL      成功   - 0以外(TRUE)                           *
 *                     失敗   - 0    (FALSE)                          *
 **********************************************************************
 * ImgKitPrintEnd() : 印刷終了処理                                    *
 *                                                                    *
 *   引  数：HDC    hDC       - ﾌﾟﾘﾝﾀのﾃﾞﾊﾞｲｽｺﾝﾃｷｽﾄ                   *
 *   戻り値：なし                                                     *
 **********************************************************************
 * ImgKitPrintStart() : 印刷開始処理                                  *
 *                                                                    *
 *   引  数：HDC   hDC    - ﾌﾟﾘﾝﾀのﾃﾞﾊﾞｲｽｺﾝﾃｷｽﾄ                       *
 *                          (0の時DLLからﾌﾟﾘﾝﾄﾀﾞｲｱﾛｸﾞをｵ-ﾌﾟﾝ)         *
 *           LPSTR Title  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ                *
 *                          (NULLの時印刷中止ﾀﾞｲｱﾛｸﾞの表示なし)       *
 *   戻り値：BOOL    成功 - 0以外(TRUE)                               *
 *                   失敗 - 0    (FALSE)                              *
 **********************************************************************
 * ImgKitRectCut() : イメージの切り取り                               *
 *                                                                    *
 *   引  数：HANDLE Handle  - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR  Title   - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR  Message - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *           int    Left    - 切り取る左位置(ﾋﾟｸｾﾙ)                   *
 *           int    Top     -         上    (ﾋﾟｸｾﾙ)                   *
 *           int    Right   -         右    (ﾋﾟｸｾﾙ)                   *
 *           int    Bottom  -         下    (ﾋﾟｸｾﾙ)                   *
 *   戻り値：HANDLE         - 新しいﾒﾓﾘﾊﾝﾄﾞﾙ                          *
 **********************************************************************
 * ImgKitRGB() : 各ＲＧＢ値の変更                                     *
 *                                                                    *
 *   引  数：HANDLE Handle  - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR  Title   - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR  Message - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *           int    Red     - 赤の色値に加える値                      *
 *                            (-255〜255)                             *
 *           int    Green   - 緑の色値に加える値                      *
 *                            (-255〜255)                             *
 *           int    Bluet   - 青の色値に加える値                      *
 *                            (-255〜255)                             *
 *   戻り値：BOOL      成功 - 0以外(TRUE)                             *
 *                     失敗 - 0    (FALSE)                            *
 **********************************************************************
 * ImgKitRotation() : イメージの回転                                  *
 *                                                                    *
 *   引  数：HANDLE Handle  - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *           int    Dir     - 処理方向                                *
 *                            0 : １８０°回転                        *
 *                            1 : 左９０°回転                        *
 *                            2 : 右９０°回転                        *
 *                            3 : 上下反転                            *
 *                            4 : 左右反転                            *
 *   戻り値：HANDLE         - 新しいﾒﾓﾘﾊﾝﾄﾞﾙ                          *
 **********************************************************************
 * ImgKitScan() : ユーザインタフェースを表示してスキャナを実行        *
 *                                                                    *
 *   引  数：HWND         hWnd  - ｳｲﾝﾄﾞｳﾊﾝﾄﾞﾙ                         *
 *           LPSCAN_IMAGE Image - 読み取り条件の取得用変数(ﾀﾞﾐｰ)      *
 *   戻り値：HANDLE             - ｲﾒｰｼﾞのﾒﾓﾘﾊﾝﾄﾞﾙ                     *
 *           LPSCAN_IMAGE Image - 読み取った条件                      *
 **********************************************************************
 * ImgKitScanEasy() : ユーザインタフェースを表示せずにスキャナを実行  *
 *                                                                    *
 *   引  数：HWND         hWnd  - ｳｲﾝﾄﾞｳﾊﾝﾄﾞﾙ                         *
 *           LPSCAN_IMAGE Image - 読み取り条件                        *
 *   戻り値：HANDLE             - ｲﾒｰｼﾞのﾒﾓﾘﾊﾝﾄﾞﾙ                     *
 *           LPSCAN_IMAGE Image - 読み取った条件                      *
 *                                                                    *
 *                                                                    *
 *  LPSCAN_IMAGE 構造体                                               *
 *                                                                    *
 *       Pixeltype : 0-白黒２値               ( 1ﾋﾞｯﾄ)                *
 *                   1-白黒グレースケール     ( 8ﾋﾞｯﾄ, 4ﾋﾞｯﾄ)         *
 *                   2-１６７０万色フルカラー (24ﾋﾞｯﾄ)                *
 *                   3-パレットカラー         ( 8ﾋﾞｯﾄ, 4ﾋﾞｯﾄ)         *
 *                   （注意）Pixeltypeが1､3での実際の読み取り         *
 *                           ﾋﾞｯﾄは，ｽｷｬﾅｰによって違う                *
 *                                                                    *
 *       Left       : 読取り範囲左の位置(インチ単位)                  *
 *                                                                    *
 *       Top        :           上の位置(インチ単位)                  *
 *                                                                    *
 *       Right      :           右の位置(インチ単位)                  *
 *                                                                    *
 *       Bottom     :           下の位置(インチ単位)                  *
 *                                                                    *
 *       Resolution : 読取り解像度(ﾄﾞｯﾄ/ｲﾝﾁ)                          *
 *                                                                    *
 *       Status     : 0 エラーなし                                    *
 *                  : 1 メモリー不足                                  *
 *                  : 2 サポート外機能                                *
 *                  : 3 設定値が不正                                  *
 *                  : 4 その他エラー                                  *
 **********************************************************************
 * ImgKitScanMulti() : 複数イメージの一括取り込み装置の実行           *
 *                                                                    *
 *   引  数：HWND  hWnd         - ｳｲﾝﾄﾞｳﾊﾝﾄﾞﾙ                         *
 *           LPSTR SaveFileName - 保存イメージファイル名              *
 *   戻り値：int                - 取得したイメージ数                  *
 *                                (0 - 取得なし)                      *
 *                                                                    *
 *   SaveFileName : ****.000 一連番号で保存                           *
 *                  ****.001                                          *
 *                  ****.002                                          *
 *                      ･                                             *
 *                      ･                                             *
 *                      ･                                             *
 **********************************************************************
 * ImgKitScanSelect() : スキャナのドライバ選択                        *
 *                                                                    *
 *   引  数：HWND hWnd - ｳｨﾝﾄﾞｳﾊﾝﾄﾞﾙ                                  *
 *   戻り値：BOOL 成功 - 0以外(TRUE)                                  *
 *                失敗 - 0    (FALSE)                                 *
 **********************************************************************
 * ImgKitSetGray() : カラーイメージをグレーカラーに変換               *
 *                                                                    *
 *   引  数：HANDLE Handle  - 処理するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ             *
 *           LPSTR Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *   戻り値：HANDLE         - 新しいﾒﾓﾘﾊﾝﾄﾞﾙ                          *
 *                                                                    *
 *   対応するイメージ                                                 *
 *         ４ビットピクセル（  １６色カラー）                         *
 *         ８ビットピクセル（２５６色カラー）                         *
 *       ２４ビットピクセル（フルカラー）                             *
 **********************************************************************
 * ImgKitSetToClipBrd() : イメージをクリップボードにコピー            *
 *                                                                    *
 *   引  数：HWND   hWnd    - ｳｲﾝﾄﾞｳﾊﾝﾄﾞﾙ                             *
 *           HANDLE Handle  - ｺﾋﾟｰｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ                 *
 *   戻り値：BOOL   成功    - 0以外(TRUE)                             *
 *                  失敗    - 0    (FALSE)                            *
 **********************************************************************
 * ImgKitSuperFileSave() : dBC-SUPER形式でファイル保存                *
 *                         (弊社 PC-98 MS-DOS用ﾌﾟﾛｸﾞﾗﾑ)               *
 *                                                                    *
 *   引  数：LPSTR  FileName - 保存ﾌｧｲﾙ名                             *
 *           HANDLE Handle   - 保存するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ            *
 *           LPSTR  Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ             *
 *           LPSTR  Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ           *
 *   戻り値：BOOL      成功  - 0以外(TRUE)                            *
 *                     失敗  - 0    (FALSE)                           *
 *                                                                    *
 *                                                                    *
 *   ファイルフォーマット：変則ランレングス（ｄＢＣ−ＳＵＰＥＲ規格） *
 *                                                                    *
 *         'C'(BYTE) :圧縮             +------+                       *
 *         'M'(BYTE) :予約             |  C   |                       *
 *          WW(int)  :幅バイト数       +------+                       *
 *          HH(int)  :縦ライン数       |  M   |                       *
 *          122バイトのダミー          +-------------+                *
 *          SIZE(int):圧縮バイト数     |      WW     |                *
 *          BITS     :データ           +-------------+                *
 *          SIZE(int):圧縮バイト数     |      HH     |                *
 *          BITS     :データ           +-----------------//-+         *
 *                 ・                  |    ﾀﾞﾐｰ(122ﾊﾞｲﾄ)   |         *
 *                 ・                  +-----------------//-+         *
 *                 ・                  |    SIZE     |                *
 *                                     +-------------------//---+     *
 *                                     |    BITS(SIZEﾊﾞｲﾄ)      |     *
 *                                     +-------------------//---+     *
 *                                     |    SIZE     |                *
 *                                     +-------------------//---+     *
 *                                     |    BITS(SIZEﾊﾞｲﾄ)      |     *
 *                                     +-------------------//---+     *
 *          BITS圧縮                               ・                 *
 *          画像ｺｰﾄﾞ,ｺﾝﾄﾛｰﾙｺｰﾄﾞ,数                 ・                 *
 *            byte   byte(9d)  byte                ・                 *
 *                                                                    *
 *          例）  AAABBCDDDDD → A'9d''3'BBCD'9d''5'                  *
 *                 (11ﾊﾞｲﾄ)          (9ﾊﾞｲﾄ)                          *
 *                                                                    *
 *          9dh - 画像圧縮ｺｰﾄﾞ                                        *
 *          95h - 画像ﾃﾞｰﾀが圧縮ｺｰﾄﾞと同じ時強制的に変更              *
 *                                                                    *
 *   対応するイメージ                                                 *
 *       １ビットピクセル（２色）                                     *
 **********************************************************************
 * ImgKitSystemPalette() : 現在のシステム（コンピュータ）の           *
 *                         パレット数を取得                           *
 *                                                                    *
 *     戻り値 ：int -   2 :         ２色（  １ビットピクセル）        *
 *                     16 :       １６色（  ４ビットピクセル）        *
 *                    256 :     ２５６色（  ８ビットピクセル）        *
 *                      0 : １６７０万色（２４ビットピクセル）        *
 **********************************************************************
 * ImgKitTiffFileLoad() : ＴＩＦＦ形式のファイルの呼び出し            *
 *                                                                    *
 *   引  数：LPSTR FileName - 呼び出すﾌｧｲﾙ名                          *
 *           LPSTR Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ              *
 *           LPSTR Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ            *
 *           int   Page     - 呼び出すﾍﾟｰｼﾞ番号(0から始まる番号)      *
 *   戻り値：HANDLE         - ｲﾒｰｼﾞのﾒﾓﾘﾊﾝﾄﾞﾙ                         *
 *                                                                    *
 * ImgKitFileLoad()での読み込みでは複数のイメージがある時、           *
 * 最初のページ（０ページ）だけの読み込みを行う                       *
 **********************************************************************
 * ImgKitTiffFileSave() : ＴＩＦＦ形式でファイル保存                  *
 *                                                                    *
 *   引  数：LPSTR  FileName - 保存ﾌｧｲﾙ名                             *
 *           HANDLE Handle   - 保存するｲﾒｰｼﾞﾃﾞｰﾀのﾒﾓﾘﾊﾝﾄﾞﾙ            *
 *           LPSTR  Title    - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾀｲﾄﾙ             *
 *           LPSTR  Message  - 処理中のﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽのﾒｯｾｰｼﾞ           *
 *           int    Type     - 圧縮ﾌﾗｸﾞ                               *
 *                             Type : 0 非圧縮                        *
 *                             Type : 1 CCITTRLE                      *
 *                             Type : 2 GROUP3-1D                     *
 *                             Type : 3 GROUP3-2D                     *
 *                             Type : 4 GROUP4                        *
 *                             Type : 5 PACKBITS                      *
 *                             Type : 6 LZW                           *
 *   戻り値：BOOL   成功     - 0以外(TRUE)                            *
 *                  失敗     - 0    (FALSE)                           *
 **********************************************************************
 *   処理中に表示するダイアログボックスについて                       *
 *                                                                    *
 *   LPSTR Title, LPSTR Message について                              *
 *   +---------------------+                                          *
 *   |        Title        |      文字列の長さは２４バイト            *
 *   +---------------------+      以下にする                          *
 *   |       Message       |                                          *
 *   |  +----------+----+  |                                          *
 *   |  |     70%  |    |  |     Title, Message がともに NULLのとき   *
 *   |  +----------+----+  |     このダイアログを表示せず、           *
 *   |     +--------+      |     砂時計アイコンを表示する             *
 *   |     | Cancel |      |                                          *
 *   |     +--------+      |                                          *
 *   +---------------------+                                          *
 **********************************************************************/

typedef struct {
	short	Pixeltype;				// 0:白黒 1:白黒写真(8ﾋﾞｯﾄｸﾞﾚｰ) 2:ｶﾗｰ写真(24ﾋﾞｯﾄ) 3:256ｶﾗｰ(8ﾋﾞｯﾄ)
	float	Left;					// 左の位置(インチ単位)
	float	Top;					// 上の位置(インチ単位)
	float	Right;					// 右の位置(インチ単位)
	float	Bottom;					// 下の位置(インチ単位)
	float	Resolution;				// DPI
	int		Status;					// エラー状態(0:正常 1:ﾒﾓﾘ不足 2:ｻﾎﾟｰﾄ外機能 3:設定値の不正 4:その他ｴﾗｰ
} SCAN_IMAGE;
typedef SCAN_IMAGE FAR* LPSCAN_IMAGE;

typedef struct {
	long			Width;			// 幅のピクセル数
	long			Height;			// 縦のピクセル数
	int				Pixeltype;		// ピクセルタイプ
	long			WidthByte;		// 幅のバイト数
	unsigned long	ImageSize;		// イメージサイズ
} IMAGE_INFO;
typedef IMAGE_INFO FAR* LPIMAGE_INFO;

typedef struct {
	short			Type;			// ファイルタイプ
	long			Width;			// 幅のピクセル数
	long			Height;			// 縦のピクセル数
	short			BitCount;		// ピクセル／ビット
	long			WidthByte;		// 幅のバイト数
	unsigned long	ImageSize;		// イメージサイズ
} FILE_INFO;
typedef FILE_INFO FAR* LPFILE_INFO;


		// IMAGE_INFOのPixeltype
#define IK_MONO_INFO				0	// １ビット（白黒２値）
#define IK_COLOR16_INFO				1	// ４ビット（１６色カラ−）
#define IK_GRAY16_INFO				2	// ４ビット（１６階調グレ−)
#define IK_COLOR256_INFO			3	// ８ビット（２５６色カラ−）
#define IK_GRAY256_INFO				4	// ８ビット（２５６階調グレ−）
#define IK_COLORFULL_INFO			5	// ２４ビット（フルカラ−）

		// 回転
#define IK_ROTATE_180				0	// １８０°
#define IK_ROTATE_L90				1	// 左９０°
#define IK_ROTATE_R90				2	// 右９０°
#define IK_ROTATE_UD				3	// 上下反転
#define IK_ROTATE_RL				4	// 左右反転

		// フィルタ
#define IK_LOPASS_HV_FILTER			0	// ﾛｰﾊﾟｽﾌｨﾙﾀ(水平と垂直方向の処理)
#define IK_LOPASS_H_FILTER			1	//          (水平方向の処理)      
#define IK_LOPASS_V_FILTER			2	//          (垂直方向の処理)      
#define IK_ROBERT_FILTER			3	// ﾛﾊﾞｰﾂﾌｨﾙﾀ                      
#define IK_RAPRA_FILTER				4	// ﾗﾌﾟﾗｼｱﾝﾌｨﾙﾀ                    

		// ファイル ロード・セーブ
#define IK_LOAD_FILE				0	// ﾛｰﾄﾞ
#define IK_LOAD_JPEG_FILE			1	// ﾛｰﾄﾞ(JPEG ｸﾞﾚｰｽｹｰﾙ)
#define IK_LOAD_GIF_FILE			2	// ﾛｰﾄﾞ(GIFﾍﾟｰｼﾞ指定)
#define IK_LOAD_TIFF_FILE			3	// ﾛｰﾄﾞ(TIFFﾍﾟｰｼﾞ指定)
#define IK_SAVE_BMP_FILE			4	// ｾｰﾌﾞ(BMP)
#define IK_SAVE_BMP_RLE_FILE		5	// ｾｰﾌﾞ(BMP RLE)
#define IK_SAVE_JPEG_FILE			6	// ｾｰﾌﾞ(JPEG)
#define IK_SAVE_JPEGGRAY_FILE		7	// ｾｰﾌﾞ(JPEG ｸﾞﾚｰｽｹｰﾙ)
#define IK_SAVE_GIF_FILE			8	// ｾｰﾌﾞ(GIF)
#define IK_SAVE_GIF_INTER_FILE		9	// ｾｰﾌﾞ(GIF ｲﾝﾀﾚｰｽ)
#define IK_SAVE_GIFT_FILE			10	// ｾｰﾌﾞ(GIF 透明)
#define IK_SAVE_GIFT_INTER_FILE		11	// ｾｰﾌﾞ(GIF ｲﾝﾀﾚｰｽ 透明)
#define IK_SAVE_TIFF_NONE_FILE		12	// ｾｰﾌﾞ(TIFF 非圧縮)
#define IK_SAVE_TIFF_RLE_FILE		13	// ｾｰﾌﾞ(TIFF CCITTRLE)
#define IK_SAVE_TIFF_FAX31D_FILE	14	// ｾｰﾌﾞ(TIFF FAX3 1D)
#define IK_SAVE_TIFF_FAX32D_FILE	15	// ｾｰﾌﾞ(TIFF FAX3 2D)
#define IK_SAVE_TIFF_FAX4_FILE		16	// ｾｰﾌﾞ(TIFF FAX4)
#define IK_SAVE_TIFF_PACKBITS_FILE	17	// ｾｰﾌﾞ(TIFF PACKBITS)
#define IK_SAVE_TIFF_LZW_FILE		18	// ｾｰﾌﾞ(TIFF LZW)
#define IK_SAVE_DBC_FILE			19	// ｾｰﾌﾞ(dBC-SUPER)

		// 表示
#define IK_SCALE_DISP				0	// ｽｹｰﾙ
#define IK_REAL_DISP				1	// 実寸
#define IK_STRETCH_DISP				2	// ｽﾄﾚｯﾁ
#define IK_REAL2_DISP				3	// 実寸(ｽｸﾛｰﾙﾊﾞｰなし)
#define IK_SCROLL_LT_DISP			4	// ｽｸﾛｰﾙ(左上)
#define IK_SCROLL_T_DISP			5	// ｽｸﾛｰﾙ(上)
#define IK_SCROLL_RT_DISP			6	// ｽｸﾛｰﾙ(右上)
#define IK_SCROLL_R_DISP			7	// ｽｸﾛｰﾙ(右)
#define IK_SCROLL_RB_DISP			8	// ｽｸﾛｰﾙ(右下)
#define IK_SCROLL_B_DISP			9	// ｽｸﾛｰﾙ(下)
#define IK_SCROLL_LB_DISP			10	// ｽｸﾛｰﾙ(左下)
#define IK_SCROLL_L_DISP			11	// ｽｸﾛｰﾙ(左)

		// 印刷
#define IK_START_PRINT				0	// 印刷開始
#define IK_GO_PRINT					1	// 印刷
#define IK_END_PRINT				2	// 印刷実行

		// 編集
#define IK_ROTATION_EDIT			0	// 回転
#define IK_BIT24TO8_EDIT			1	// ﾌﾙｶﾗｰ→256色
#define IK_BIT8TO4_EDIT				2	// 256→16色
#define IK_SETGRAY_EDIT				3	// ｸﾞﾚｰｽｹｰﾙ変換
#define IK_IMAGESIZE_EDIT			4	// ｲﾒｰｼﾞｻｲｽﾞの変更
#define IK_EMBOSS_EDIT				5	// 浮彫り処理
#define IK_COLORREVERSE_EDIT		6	// 色の反転
#define IK_COLOR24AND8_EDIT			7	// ﾌﾙｶﾗｰに256色(256ｸﾞﾚｰｽｹｰﾙ)の合成
#define IK_MOSAIC_EDIT				8	// ﾓｻﾞｲｸ
#define IK_FILTER_EDIT				9	// ﾌｨﾙﾀ
#define IK_CUT_EDIT					10	// 切り取り処理
#define IK_RECTCUT_EDIT				11	// 矩形切り取り処理
#define IK_SET_CLIP_EDIT			12	// ｸﾘｯﾌﾟﾎﾞｰﾄﾞへｺﾋﾟｰ
#define IK_GET_CLIP_EDIT			13	// ｸﾘｯﾌﾟﾎﾞｰﾄﾞからｺﾋﾟｰ
#define IK_BRIGHT_EDIT				14	// 輝度調整
#define IK_RGB_EDIT					15	// RGB色調調整
#define IK_COPYIMAGE				16	// ｲﾒｰｼﾞのｺﾋﾟｰ
#define IK_CONVCOLOR				17	// ｲﾒｰｼﾞの色数変更
#define IK_ADDIMAGE					18	// ｲﾒｰｼﾞの合成

		// スキャン
#define IK_SELECT_SCAN				0	// 入力装置の選択
#define IK_GO_SCAN					1	// ｽｷｬﾅ実行
#define IK_USER_SCAN				2	// ｽｷｬﾅ実行(簡易取込)
#define IK_MULTI_SCAN				3	// 複数ｲﾒｰｼﾞ取り込み

		// ピクセルタイプ(ｽｷｬﾅ読込時)
#define IK_MONO_SCAN_PIXEL			0	// 白黒
#define IK_MONO8_SCAN_PIXEL			1	// 白黒写真(8ﾋﾞｯﾄｸﾞﾚｰ)
#define IK_COLOR24_SCAN_PIXEL		2	// ｶﾗｰ写真(24ﾋﾞｯﾄ)
#define IK_COLOR8_SCAN_PIXEL		3	// 256ｶﾗｰ(8ﾋﾞｯﾄ)

		// スライドショウ
#define IK_START_SLIDE				0	// ｽﾗｲﾄﾞｼｮｳの開始
#define IK_NEXT_SLIDE				1	// 次へ
#define IK_PREV_SLIDE				2	// 戻る
#define IK_END_SLIDE				3	// ｽﾗｲﾄﾞｼｮｳの終了
#define IK_TOP_SLIDE				4	// 先頭へ
#define IK_BOTTOM_SLIDE				5	// 最後へ
#define IK_PAUSE_SLIDE				6	// 停止
#define IK_RESUME_SLIDE				7	// 再開

		// スライド表示方法
#define IK_SCROLL_NM_SLIDE			0	// 通常
#define IK_SCROLL_RL_SLIDE			1	// 左←右
#define IK_SCROLL_LR_SLIDE			2	// 左→右
#define IK_SCROLL_UD_SLIDE			3	// 上→下
#define IK_SCROLL_DU_SLIDE			4	// 上←下


#ifdef __cplusplus
extern "C" {            /* Assume C declarations for C++ */
#endif

// IMGCOM.DLL IMGCOM3.DLL
DWORD  IMAGEKIT_API ImgKitMemSize(HANDLE Handle);
BOOL   IMAGEKIT_API ImgKitMemFree(HANDLE Handle);
int    IMAGEKIT_API ImgKitSystemPalette(void);

// IMGSCAN.DLL IMGSCAN3.DLL
BOOL   IMAGEKIT_API ImgKitScanSelect(HWND hWnd);
HANDLE IMAGEKIT_API ImgKitScan(HWND hWnd, LPSCAN_IMAGE Image);
HANDLE IMAGEKIT_API ImgKitScanEasy(HWND hWnd, LPSCAN_IMAGE Image);
int    IMAGEKIT_API ImgKitScanMulti(HWND hWnd, LPSTR SaveFileName);

// IMGETC.DLL IMGETC3.DLL
HANDLE IMAGEKIT_API ImgKitRotation(HANDLE Handle, LPSTR Title, LPSTR Message, int Dir);
HANDLE IMAGEKIT_API ImgKitBit24To8(HANDLE Handle, LPSTR Title, LPSTR Message);
HANDLE IMAGEKIT_API ImgKitBit8To4(HANDLE Handle, LPSTR Title, LPSTR Message);
HANDLE IMAGEKIT_API ImgKitSetGray(HANDLE Handle, LPSTR Title, LPSTR Message);
HANDLE IMAGEKIT_API ImgKitImageSize(HANDLE Handle, LPSTR Title, LPSTR Message, int Width, int Height);
BOOL   IMAGEKIT_API ImgKitImageInfo(HANDLE Handle, LPIMAGE_INFO ImageInfo);
BOOL   IMAGEKIT_API ImgKitEmboss(HANDLE Handle, LPSTR Title, LPSTR Message);
BOOL   IMAGEKIT_API ImgKitColorReverse(HANDLE Handle, LPSTR Title, LPSTR Message);
HANDLE IMAGEKIT_API ImgKitColor24And8(HANDLE Handle24, HANDLE Handle8, LPSTR Title, LPSTR Message);
BOOL   IMAGEKIT_API ImgKitMosaic(HANDLE Handle, LPSTR Title, LPSTR Message, int Rect);
BOOL   IMAGEKIT_API ImgKitFilter(HANDLE Handle, LPSTR Title, LPSTR Message, int Proc);
HANDLE IMAGEKIT_API ImgKitCopy(HANDLE Handle, LPSTR Title, LPSTR Message);

// IMGFILE.DLL IMGFILE3.DLL
HANDLE IMAGEKIT_API ImgKitFileLoad(LPSTR FileName, LPSTR Title, LPSTR Message);
HANDLE IMAGEKIT_API ImgKitJpegFileLoad(LPSTR FileName, LPSTR Title, LPSTR Message, int JpgCol);
HANDLE IMAGEKIT_API ImgKitGifFileLoad(LPSTR FileName, LPSTR Title, LPSTR Message, int Page);
BOOL   IMAGEKIT_API ImgKitBmpFileSave(LPSTR FileName, HANDLE Handle, LPSTR Title, LPSTR Message, BOOL Comp);
BOOL   IMAGEKIT_API ImgKitJpegFileSave(LPSTR FileName, HANDLE Handle, LPSTR Title, LPSTR Message, int Quality, int JpgCol);
BOOL   IMAGEKIT_API ImgKitSuperFileSave(LPSTR FileName, HANDLE Handle, LPSTR Title, LPSTR Message);
BOOL   IMAGEKIT_API ImgKitGifFileSave(LPSTR FileName, HANDLE Handle, LPSTR Title, LPSTR Message);
BOOL   IMAGEKIT_API ImgKitGifInterFileSave(LPSTR FileName, HANDLE Handle, LPSTR Title, LPSTR Message);

// IMGDSP.DLL IMGDSP3.DLL
BOOL   IMAGEKIT_API ImgKitDisplay(HWND hWnd, HANDLE handle, BOOL Stretch);
BOOL   IMAGEKIT_API ImgKitDisplayHdc(HDC hDC, HANDLE handle, int Width, int Height, BOOL Stretch);
BOOL   IMAGEKIT_API ImgKitPrintStart(HDC hDC, LPSTR Title);
BOOL   IMAGEKIT_API ImgKitPrint(HWND hWnd, HDC hDC, HANDLE handle, LPRECT PrintRect, BOOL Frame);
void   IMAGEKIT_API ImgKitPrintEnd(HDC hDC);

// IMGCUT.DLL IMGCUT3.DLL
BOOL   IMAGEKIT_API ImgKitCut(HANDLE handle, LPSTR aTitle, LPSTR aMessage);

HANDLE IMAGEKIT_API ImgKitTiffFileLoad(LPSTR FileName, LPSTR Title, LPSTR Message, int Page);
BOOL   IMAGEKIT_API ImgKitTiffFileSave(LPSTR FileName, HANDLE Handle, LPSTR Title, LPSTR Message, int Type);
BOOL   IMAGEKIT_API ImgKitGifTrFileSave(LPSTR FileName, HANDLE Handle, WORD Red, WORD Green, WORD Blue, LPSTR Title, LPSTR Message);
BOOL   IMAGEKIT_API ImgKitGifInterTrFileSave(LPSTR FileName, HANDLE Handle, WORD Red, WORD Green, WORD Blue, LPSTR Title, LPSTR Message);
HANDLE IMAGEKIT_API ImgKitRectCut(HANDLE Handle, LPSTR Title, LPSTR Message, int Left, int Top, int Right, int Bottom);
HANDLE IMAGEKIT_API ImgKitGetFromClipBrd(HWND hWnd);
BOOL   IMAGEKIT_API ImgKitSetToClipBrd(HWND hWnd, HANDLE Handle);
BOOL   IMAGEKIT_API ImgKitBright(HANDLE Handle, LPSTR Title, LPSTR Message, double Bright);
BOOL   IMAGEKIT_API ImgKitRGB(HANDLE Handle, LPSTR Title, LPSTR Message, int Red, int Green, int Blue);

BOOL   IMAGEKIT_API ImgKitFileType(LPSTR FileName, LPFILE_INFO FileType);
HANDLE IMAGEKIT_API ImgKitImageAdd(HANDLE Handle1, HANDLE Handle2, int x, int y, int Red, int Green, int Blue, LPSTR Title, LPSTR Message);
HANDLE IMAGEKIT_API ImgKitConvertColor(HANDLE Handle, int Pixeltype, BOOL FixedPal, BOOL Dither, LPSTR Title, LPSTR Message);
BOOL   IMAGEKIT_API ImgKitDisplayRGB(HWND hWnd, HANDLE Handle, BOOL Stretch, int Red, int Green, int Blue, BOOL Frame);
BOOL   IMAGEKIT_API ImgKitDisplayHdcRGB(HDC hDC, HANDLE Handle, int Width, int Height, BOOL Stretch, int Red, int Green, int Blue, BOOL Frame);
BOOL   IMAGEKIT_API ImgKitDisplayHdcXY(HDC hDC, HANDLE Handle, int Xstart, int Ystart);
BOOL   IMAGEKIT_API ImgKitDisplayXY(HWND hWnd, HANDLE Handle, int Xstart, int Ystart);


typedef DWORD  (FAR_PASCAL *PROCIMGKITMEMSIZE)(HANDLE Handle);
typedef BOOL   (FAR_PASCAL *PROCIMGKITMEMFREE)(HANDLE Handle);
typedef int    (FAR_PASCAL *PROCIMGKITSYSTEMPALETTE)(void);

typedef BOOL   (FAR_PASCAL *PROCIMGKITSCANSELECT)(HWND hWnd);
typedef HANDLE (FAR_PASCAL *PROCIMGKITSCAN)(HWND hWnd, LPSCAN_IMAGE Image);
typedef HANDLE (FAR_PASCAL *PROCIMGKITSCANEASY)(HWND hWnd, LPSCAN_IMAGE Image);
typedef int    (FAR_PASCAL *PROCIMGKITSCANMULTI)(HWND hWnd, LPSTR SaveFileName);

typedef HANDLE (FAR_PASCAL *PROCIMGKITROTATION)(HANDLE Handle, LPSTR Title, LPSTR Message, int Dir);
typedef HANDLE (FAR_PASCAL *PROCIMGKITBIT24TO8)(HANDLE Handle, LPSTR Title, LPSTR Message);
typedef HANDLE (FAR_PASCAL *PROCIMGKITBIT8TO4)(HANDLE Handle, LPSTR Title, LPSTR Message);
typedef HANDLE (FAR_PASCAL *PROCIMGKITSETGRAY)(HANDLE Handle, LPSTR Title, LPSTR Message);
typedef HANDLE (FAR_PASCAL *PROCIMGKITIMAGESIZE)(HANDLE Handle, LPSTR Title, LPSTR Message, int Width, int Height);
typedef BOOL   (FAR_PASCAL *PROCIMGKITIMAGEINFO)(HANDLE Handle, LPIMAGE_INFO ImageInfo);
typedef BOOL   (FAR_PASCAL *PROCIMGKITEMBOSS)(HANDLE Handle, LPSTR Title, LPSTR Message);
typedef BOOL   (FAR_PASCAL *PROCIMGKITCOLORREVERSE)(HANDLE Handle, LPSTR Title, LPSTR Message);
typedef HANDLE (FAR_PASCAL *PROCIMGKITCOLOR24AND8)(HANDLE Handle24, HANDLE Handle8, LPSTR Title, LPSTR Message);
typedef BOOL   (FAR_PASCAL *PROCIMGKITMOSAIC)(HANDLE Handle, LPSTR Title, LPSTR Message, int Rect);
typedef BOOL   (FAR_PASCAL *PROCIMGKITFILTER)(HANDLE Handle, LPSTR Title, LPSTR Message, int Proc);
typedef HANDLE (FAR_PASCAL *PROCIMGKITCOPY)(HANDLE Handle, LPSTR Title, LPSTR Message);

typedef HANDLE (FAR_PASCAL *PROCIMGKITFILELOAD)(LPSTR FileName, LPSTR Title, LPSTR Message);
typedef HANDLE (FAR_PASCAL *PROCIMGKITJPEGFILELOAD)(LPSTR FileName, LPSTR Title, LPSTR Message, int JpgCol);
typedef BOOL   (FAR_PASCAL *PROCIMGKITBMPFILESAVE)(LPSTR FileName, HANDLE Handle, LPSTR Title, LPSTR Message, BOOL Comp);
typedef BOOL   (FAR_PASCAL *PROCIMGKITJPEGFILESAVE)(LPSTR FileName, HANDLE Handle, LPSTR Title, LPSTR Message, int Quality, int JpgCol);
typedef BOOL   (FAR_PASCAL *PROCIMGKITSUPERFILESAVE)(LPSTR FileName, HANDLE Handle, LPSTR Title, LPSTR Message);
typedef BOOL   (FAR_PASCAL *PROCIMGKITGIFINTERFILESAVE)(LPSTR FileName, HANDLE Handle, LPSTR Title, LPSTR Message);
typedef HANDLE (FAR_PASCAL *PROCIMGKITGIFFILELOAD)(LPSTR FileName, LPSTR Title, LPSTR Message, int Page);
typedef BOOL   (FAR_PASCAL *PROCIMGKITGIFFILESAVE)(LPSTR FileName, HANDLE Handle, LPSTR Title, LPSTR Message);

typedef BOOL   (FAR_PASCAL *PROCIMGKITDISPLAY)(HWND hWnd, HANDLE handle, BOOL Stretch);
typedef BOOL   (FAR_PASCAL *PROCIMGKITDISPLAYHDC)(HDC hDC, HANDLE handle, int Width, int Height, BOOL Stretch);
typedef BOOL   (FAR_PASCAL *PROCIMGKITPRINTSTART)(HDC hDC, LPSTR Title);
typedef BOOL   (FAR_PASCAL *PROCIMGKITPRINT)(HWND hWnd, HDC hDC, HANDLE handle, LPRECT PrintRect, BOOL Frame);
typedef void   (FAR_PASCAL *PROCIMGKITPRINTEND)(HDC hDC);

typedef BOOL   (FAR_PASCAL *PROCIMGKITCUT)(HANDLE handle, LPSTR aTitle, LPSTR aMessage);

typedef HANDLE (FAR_PASCAL *PROCIMGKITTIFFFILELOAD)(LPSTR FileName, LPSTR Title, LPSTR Message, int Page);
typedef BOOL   (FAR_PASCAL *PROCIMGKITTIFFFILESAVE)(LPSTR FileName, HANDLE Handle, LPSTR Title, LPSTR Message, int Type);
typedef BOOL   (FAR_PASCAL *PROCIMGKITGIFTRFILESAVE)(LPSTR FileName, HANDLE Handle, WORD Red, WORD Green, WORD Blue, LPSTR Title, LPSTR Message);
typedef BOOL   (FAR_PASCAL *PROCIMGKITGIFINTERTRFILESAVE)(LPSTR FileName, HANDLE Handle, WORD Red, WORD Green, WORD Blue, LPSTR Title, LPSTR Message);
typedef HANDLE (FAR_PASCAL *PROCIMGKITRECTCUT)(HANDLE Handle, LPSTR aTitle, LPSTR aMessage, int Left, int Top, int Right, int Bottom);
typedef HANDLE (FAR_PASCAL *PROCIMGKITGETFROMCLIPBRD)(HWND hWnd);
typedef BOOL   (FAR_PASCAL *PROCIMGKITSETTOCLIPBRD)(HWND hWnd, HANDLE Handle);
typedef BOOL   (FAR_PASCAL *PROCIMGKITBRIGHT)(HANDLE Handle, LPSTR Title, LPSTR Message, double Bright);
typedef BOOL   (FAR_PASCAL *PROCIMGKITRGB)(HANDLE Handle, LPSTR Title, LPSTR Message, int Red, int Green, int Blue);

typedef HANDLE (FAR_PASCAL *PROCIMGKITFILETYPE)(LPSTR FileName, LPFILE_INFO FileType);
typedef HANDLE (FAR_PASCAL *PROCIMGKITIMAGEADD)(HANDLE Handle1, HANDLE Handle2, int x, int y, int Red, int Green, int Blue, LPSTR Title, LPSTR Message);
typedef HANDLE (FAR_PASCAL *PROCIMGKITCONVERTCOLOR)(HANDLE Handle, int Color, BOOL Palette, BOOL Dither, LPSTR Title, LPSTR Message);
typedef HANDLE (FAR_PASCAL *PROCIMGKITDISPLAYRGB)(HWND hWnd, HANDLE Handle, BOOL Stretch, int Red, int Green, int Blue, BOOL Frame);
typedef HANDLE (FAR_PASCAL *PROCIMGKITDISPLAYHDCRGB)(HDC hDC, HANDLE Handle, int Width, int Height, BOOL Stretch, int Red, int Green, int Blue, BOOL Frame);
typedef HANDLE (FAR_PASCAL *PROCIMGKITDISPLAYHDCXY)(HDC hDC, HANDLE Handle, int Xstart, int Ystart);
typedef HANDLE (FAR_PASCAL *PROCIMGKITDISPLAYXY)(HWND hWnd, HANDLE Handle, int Xstart, int Ystart);

#ifdef  __cplusplus
}
#endif

#endif			// IMAGEKIT_INCLUDE

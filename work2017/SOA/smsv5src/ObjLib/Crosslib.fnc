void crossinit();
dbezetype TransFreecurveBezier(dcurvetype *pFc);
dbezetype TransArcBezier(darctype *ac);
int crossbezebezediv(dbezetype *bz1, dbezetype *bz2, dbezetype *bz1d, dbezetype *bz2d);
int crossbezearcdiv(dbezetype *bz1, darctype *ac2, dbezetype *bz1d, darctype *ac2d);
int crossarcarcdiv(darctype *ac1, darctype *ac2, darctype *ac1d, darctype *ac2d);
int crossbezebezecrs(dbezetype *bz1, dbezetype *bz2, DBL *xtbl, DBL *ytbl);
int crossbezelinecrs(dbezetype *bz1, dlinetype *ln2, DBL *xtbl, DBL *ytbl);
int crossbezelinecrsex(dbezetype *bz1, dlinetype *ln2, DBL *xtbl, DBL *ytbl, DBL *ttbl);
int crosslinebezecrs(dlinetype *ln1, dbezetype *bz2, DBL *xtbl, DBL *ytbl);
int crosslinelinecrs(dlinetype *ln1, dlinetype *ln2, DBL *xtbl, DBL *ytbl);
int crossarclinecrs(darctype *ac1, dlinetype *ln2, DBL *xx, DBL *yy);
DBL crossgetlinett(dlinetype *ln, DBL xx, DBL yy);
DBL crossgetbezett(dbezetype *bz, DBL xx, DBL yy);
int crossbezediv(dbezetype *sbz, DBL xx, DBL yy, dbezetype *dbz1, dbezetype *dbz2);
int crossarcdiv(darctype *sac, DBL xx, DBL yy, darctype *dac1, darctype *dac2);
int crossbezettdiv(dbezetype *sbz, DBL tt, dbezetype *dbz1, dbezetype *dbz2);
int crossbezestetdiv(dbezetype *sbz, DBL st, DBL et, dbezetype *dbz);
int crossarcttdiv(darctype *sac, DBL xx, DBL yy, DBL tt, darctype *dac1, darctype *dac2);
